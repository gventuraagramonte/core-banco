// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Cliente {
  id       String   @id @default(uuid())
  dni      String   @unique
  nombres  String
  correo   String   @unique
  telefono String
  activo   Boolean  @default(true)
  cuentas  Cuenta[]
}

model Cuenta {
  id            String            @id @default(uuid())
  numeroCuenta  String            @unique
  saldo         Decimal           @default(0.00)
  moneda        TransaccionMoneda
  activo        Boolean           @default(true)
  clienteId     String
  cliente       Cliente           @relation(fields: [clienteId], references: [id])
  transacciones Transaccion[]
}

model Transaccion {
  id        String            @id @default(uuid())
  monto     Decimal
  estado    TransaccionEstado
  moneda    TransaccionMoneda
  cuentaId  String
  cuenta    Cuenta            @relation(fields: [cuentaId], references: [id])
  empresaId String
  empresa   Empresa           @relation(fields: [empresaId], references: [id])
  createdAt DateTime          @default(now())
  updatedAt DateTime          @updatedAt
}

model Empresa {
  id            String        @id @default(uuid())
  nombre        String
  ruc           String        @unique
  activa        Boolean       @default(true)
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  transacciones Transaccion[]
}

model Auditoria {
  id        String   @id @default(uuid())
  accion    String
  entidad   String
  entidadId String
  usuario   String
  detalle   String
  timestamp DateTime @default(now())
}

enum TransaccionEstado {
  APROBADA
  FALLIDO
  PENDIENTE
}

enum TransaccionMoneda {
  PEN
  USD
}
